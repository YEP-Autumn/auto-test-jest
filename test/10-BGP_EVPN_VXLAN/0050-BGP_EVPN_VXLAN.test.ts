import { TestHelper } from "../../utils/TestHelper";

let testHelper: TestHelper;

beforeAll(async () => {
  testHelper = await new TestHelper().init();
});

afterAll(async () => {
  await testHelper.destroy();
});

test("通过BGP EVPN 发布 分布式vxlan三层网关的ARP表项到VRF中", async () => {
  testHelper.ExecConfigDutA([
    "configure terminal",
    "vlan database",
    "vlan 10",
    "vlan 10 overlay enable",
    "exit",
    "ip vrf evpn",
    "rd 1000:1",
    "route-target import 1000:1000 evpn",
    "vxlan vni 1000",
    "exit",
    "interface eth-0-1",
    "no switchport",
    "vxlan uplink enable",
    "ip address 192.168.1.1/24",
    "exit",
    "interface eth-0-39",
    "switchport mode trunk",
    "switchport trunk allowed vlan add 10",
    "exit",
    "interface vlan10",
    "ip vrf forwarding evpn",
    "overlay host-collect enable",
    "ip address 192.168.10.1/24",
    "exit",
    "interface loopback0",
    "ip address 10.1.1.1/32",
    "exit",
    "interface nve0",
    "source loopback0",
    "member vni 10",
    "member vni 1000 associate-vrf",
    "exit",
    "overlay",
    "vlan 10 vni 10",
    "exit",
    "evpn mode asymmetry",
    "evpn",
    "vni 10",
    "rd 10:1",
    "route-target both 10:10",
    "route-target export 1000:1000",
    "exit",
    "exit",
    "router bgp 100",
    "bgp router-id 10.1.1.1",
    "neighbor 10.2.2.2 remote-as 100",
    "neighbor 10.2.2.2 update-source loopback0",
    "address-family ipv4",
    "neighbor 10.2.2.2 activate",
    "exit-address-family",
    "address-family l2vpn evpn",
    "neighbor 10.2.2.2 activate",
    "neighbor 10.2.2.2 send-community both",
    "exit-address-family",
    "exit",
    "ip route 10.2.2.2/32 192.168.1.2",
    "ip route 10.3.3.3/32 192.168.1.2",
    "end",
  ]);

  testHelper.ExecConfigDutB([
    "configure terminal",
    "interface eth-0-1",
    "no switchport",
    "vxlan uplink enable",
    "ip address 192.168.1.2/24",
    "exit",
    "interface eth-0-2",
    "no switchport",
    "vxlan uplink enable",
    "ip address 192.168.2.1/24",
    "exit",
    "interface loopback0",
    "ip address 10.2.2.2/32",
    "exit",
    "evpn",
    "exit",
    "router bgp 100",
    "bgp router-id 10.2.2.2",
    "neighbor 10.1.1.1 remote-as 100",
    "neighbor 10.1.1.1 update-source loopback0",
    "neighbor 10.3.3.3 remote-as 100",
    "neighbor 10.3.3.3 update-source loopback0",
    "address-family ipv4",
    "neighbor 10.1.1.1 activate",
    "neighbor 10.3.3.3 activate",
    "exit-address-family",
    "address-family l2vpn evpn",
    "retain route-target all",
    "neighbor 10.1.1.1 activate",
    "neighbor 10.1.1.1 route-reflector-client",
    "neighbor 10.1.1.1 send-community both",
    "neighbor 10.3.3.3 activate",
    "neighbor 10.3.3.3 route-reflector-client",
    "neighbor 10.3.3.3 send-community both",
    "exit-address-family",
    "exit",
    "ip route 10.1.1.1/32 192.168.1.1",
    "ip route 10.3.3.3/32 192.168.2.2",
    "end",
  ]);

  testHelper.ExecConfigDutC([
    "configure terminal",
    "vlan database",
    "vlan 10,20",
    "vlan 10 overlay enable",
    "vlan 20 overlay enable",
    "exit",
    "ip vrf evpn",
    "rd 1000:3",
    "route-target import 1000:1000 evpn",
    "vxlan vni 1000",
    "exit",
    "interface eth-0-2",
    "no switchport",
    "vxlan uplink enable",
    "ip address 192.168.2.2/24",
    "exit",
    "interface eth-0-39",
    "switchport mode trunk",
    "switchport trunk allowed vlan add 10,20",
    "exit",
    "interface vlan10",
    "ip vrf forwarding evpn",
    "overlay host-collect enable",
    "ip address 192.168.10.1/24",
    "exit",
    "interface vlan20",
    "ip vrf forwarding evpn",
    "overlay host-collect enable",
    "ip address 192.168.20.1/24",
    "exit",
    "interface loopback0",
    "ip address 10.3.3.3/32",
    "exit",
    "interface nve0",
    "source loopback0",
    "member vni 10",
    "member vni 20",
    "member vni 1000 associate-vrf",
    "exit",
    "overlay",
    "vlan 10 vni 10",
    "vlan 20 vni 20",
    "exit",
    "evpn mode asymmetry",
    "evpn",
    "vni 10",
    "rd 10:3",
    "route-target both 10:10",
    "route-target export 1000:1000",
    "vni 20",
    "rd 20:3",
    "route-target both 20:20",
    "route-target export 1000:1000",
    "exit",
    "exit",
    "router bgp 100",
    "bgp router-id 10.3.3.3",
    "neighbor 10.2.2.2 remote-as 100",
    "neighbor 10.2.2.2 update-source loopback0",
    "address-family ipv4",
    "neighbor 10.2.2.2 activate",
    "exit-address-family",
    "address-family l2vpn evpn",
    "neighbor 10.2.2.2 activate",
    "neighbor 10.2.2.2 send-community both",
    "exit-address-family",
    "exit",
    "ip route 10.1.1.1/32 192.168.2.1",
    "ip route 10.2.2.2/32 192.168.2.1",
    "end",
  ]);

  testHelper.ExecConfigDutB(["clear bgp *"]);

  testHelper.sleep(25000);

  testHelper.CleanConfigDutA([
    "configure terminal",
    "no router bgp 100",
    "no evpn",
    "no evpn mode asymmetry",
    "no ip vrf evpn",
    "no ip route 10.2.2.2/32",
    "no ip route 10.3.3.3/32",
    "no interface loopback0",
    "no interface nve0",
    "overlay",
    "no vlan 10 vni",
    "exit",
    "vlan database",
    "no vlan 10",
    "exit",
    "interface eth-0-1",
    "switchport",
    "vxlan uplink disable",
    "exit",
    "interface eth-0-39",
    "switchport mode access",
    "exit",
    "end",
  ]);

  testHelper.CleanConfigDutB([
    "configure terminal",
    "no router bgp 100",
    "no evpn",
    "no interface loopback0",
    "interface eth-0-1",
    "switchport",
    "vxlan uplink disable",
    "exit",
    "interface eth-0-2",
    "switchport",
    "vxlan uplink disable",
    "exit",
    "no ip route 10.1.1.1/32",
    "no ip route 10.3.3.3/32",
    "end",
  ]);

  testHelper.CleanConfigDutC([
    "configure terminal",
    "no router bgp 100",
    "no evpn",
    "no evpn mode asymmetry",
    "no ip vrf evpn",
    "no interface loopback0",
    "no interface nve0",
    "no ip route 10.1.1.1/32",
    "no ip route 10.2.2.2/32",
    "overlay",
    "no vlan 10 vni",
    "no vlan 20 vni",
    "vlan database",
    "no vlan 10,20",
    "exit",
    "interface eth-0-2",
    "switchport",
    "vxlan uplink disable",
    "exit",
    "interface eth-0-39",
    "switchport mode access",
    "end",
  ]);

  await testHelper.startTest();

  expect(testHelper.result()).toBeTruthy();
}, 300000);
